#!/usr/bin/env python3

"""
变量

变量不需要显示的声明数据类型，在程序中就是用一个变量名表示，变量名必须是大小写英文、数字和_的组合，且不能用数字开头
"""
a = 1
b = '1111'
c = -10
d = False
d = 1
d = '1'

# 在Python中，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量
print(1) # 1


"""
这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。

静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java
"""

"""
最后，理解变量在计算机内存中的表示也非常重要
"""
a = '111' # Python解释器干了两件事情：在内存中创建了一个'111'的字符串；在内存中创建了一个名为a的变量，并把它指向'111'。


"""
常量

在Python中，通常用全部大写的变量名表示常量
"""
PI = 3.141592653
print(PI) # 3.141592653

# 事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变
# 所以，用全部大写的变量名表示常量只是一个习惯上的用法
PI = 111
print(PI) # 111


"""
在Python中，有两种除法，一种除法是 /
"""
print(1 / 2) # 0.5
print(4 / 2) # 2.0
# / 除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数：


"""
还有一种除法是 //，称为地板除，两个整数的除法仍然是整数
"""
print(1 // 2) # 0
print(4 // 2) # 2
# 整数的地板除//永远是整数，即使除不尽。要做精确的除法，使用/就可以。

"""
因为//除法只取结果的整数部分，所以Python还提供一个余数运算，可以得到两个整数相除的余数
"""
print(10 % 3) # 1


"""
无论整数做//除法还是取余数，结果永远是整数，所以，整数运算结果永远是精确的。
"""